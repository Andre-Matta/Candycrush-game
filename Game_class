import javafx.animation.Animation;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.application.Application;
import javafx.scene.ImageCursor;
import javafx.scene.Scene;
import javafx.scene.image.ImageView;
import javafx.scene.layout.StackPane;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.geometry.Rectangle2D;
import javafx.util.Duration;
import java.io.File;


public class Game_class extends Application {

    @Override
    public void start(Stage Game_window) throws Exception
    {
        //creating the stage
        Game_window.setTitle("Candy Crush");
        Game_window.getIcons().add(new Image("Images/Icon.png"));
        Game_window.setWidth(900);
        Game_window.setHeight(800);

        //setting the scene
        StackPane parent = new StackPane();
        Scene Start_menu = new Scene(parent);
        Game_window.setScene(Start_menu);

        //changing the cursor of the game
        Start_menu.setCursor(new ImageCursor(new Image("Images/Cursor.png")));

        //adding background to the game
        Image background = new Image("Images/Background.png");
        ImageView background1 = new ImageView(background);
        parent.getChildren().add(background1);

        //start menu sound
        //String uriString = new File("C:\\Users\\Andy\\Downloads\\candy_sound.mp3").toURI().toString();
        //MediaPlayer  media_player = new MediaPlayer(new Media(uriString));


        //Making the play button
        Image play = new Image("Images/Play_button.png");
        ImageView play1 = new ImageView(play);
        Button play_button = new Button();
        play_button.setGraphic(play1);
        play_button.setStyle("  -fx-background-color: transparent;");
        play_button.setTranslateY(118);

        //the animation of the jumping girl
        Image girl_jumping = new Image("Images/Candy_girl.png");
        ImageView girl_jumping1 = new ImageView(girl_jumping);
        girl_jumping1.setViewport(new Rectangle2D(0, 300, 300, 330));
        girl_jumping1.setTranslateX(-250);
        girl_jumping1.setTranslateY(90);
        final Animation animation = new Animator(girl_jumping1, Duration.millis(1000),
                4, 4,
                0, 300,
                300, 330);

        animation.setCycleCount(Animation.INDEFINITE);
        animation.play();

        //adding the button to the stage
        parent.getChildren().addAll(play_button,  girl_jumping1);

        //button animation when mouse hovered over it
        play_button.setOnMouseExited(exit -> {
            play1.setFitHeight(69);
            play1.setPreserveRatio(true);
            play_button.setGraphic(play1);
        });
        play_button.setOnMouseEntered(enter -> {
            play1.setFitHeight(80);
            play1.setPreserveRatio(true);
            play_button.setGraphic(play1);
        });

        //accessing the menu where you type your name
        Naming_menu(Game_window, play_button, play);

        //showing the stage
        Game_window.show();
    }

    public void Naming_menu(Stage Game_window, Button play_button, Image play) throws Exception
    {
        //Creating new window to write your name in
        Stage Naming = new Stage();
        Naming.setWidth(400);
        Naming.setHeight(500);
        Naming.initOwner(Game_window);
        Naming.initModality(Modality.WINDOW_MODAL);
        Naming.initStyle(StageStyle.TRANSPARENT);

        //opening the window to type your name
        play_button.setOnMouseClicked(mouseEvent -> Naming.show());

        //creating the pop-up window to write your name in
        StackPane parent1 = new StackPane();
        Scene naming = new Scene(parent1);
        naming.setCursor(new ImageCursor(new Image("Images/Cursor.png")));
        parent1.setStyle("-fx-background-color: rgba(0, 0, 0, 0); -fx-background-radius: 10;" );
        naming.setFill(Color.TRANSPARENT);
        Naming.setScene(naming);
        Image name_menu = new Image("Images/Name_menu.png");
        ImageView name_menu1 = new ImageView(name_menu);
        parent1.getChildren().add(name_menu1);

        naming.getStylesheets().add("Stylesheets/Background.css");

        //adding text above entering name field
        Font game_font = Font.loadFont("Fonts/n.ttf", 10);
        Label type_your_name =new Label("Type your name");
        type_your_name.setTranslateX(-15);
        type_your_name.setTranslateY(-150);
        type_your_name.setStyle("-fx-background-color: transparent; -fx-font-size: 60; " +
                "Color: #753a19; -fx-font-family: 'Brush Script MT'");

        //field to type your name
        TextField enter_name = new TextField();
        enter_name.setTranslateX(-10);
        enter_name.setTranslateY(-70);
        enter_name.setMaxWidth(300);
        enter_name.setMaxHeight(20);
        enter_name.setAlignment(Pos.CENTER);
        enter_name.setStyle("-fx-background-color: #fea9ca; -fx-background-radius: 20;-fx-font-size: 45;" +
                "-fx-font-family: 'Brush Script MT';");

        //submitting your name after inputting it
        Button enter = new Button();
        ImageView enter1 = new ImageView(play);
        enter.setGraphic(enter1);
        enter.setTranslateX(-10);
        enter.setTranslateY(170);
        enter.setStyle("-fx-background-color: transparent");

        //button animation when mouse hovered over it
        enter.setOnMouseExited(mouse -> {
            enter1.setFitHeight(69);
            enter1.setPreserveRatio(true);
            enter.setGraphic(enter1);
        });
        enter.setOnMouseEntered(mouse -> {
            enter1.setFitHeight(80);
            enter1.setPreserveRatio(true);
            enter.setGraphic(enter1);
        });

        //entering the next scene and save the name of the player
        enter.setOnMouseClicked(mouseEvent -> {
            String Name = new String();
            Name = enter_name.getText();
            Naming.close();

            //Accessing the Level select scene
            Levels_scene(Game_window);
        });

        //adding the exit button
        Image Exit = new Image("Images/Exit.png");
        ImageView exit1 = new ImageView(Exit);
        Button exit_button = new Button();
        exit_button.setGraphic(exit1);
        exit_button.setStyle("  -fx-background-color: transparent;");
        exit_button.setTranslateX(165);
        exit_button.setTranslateY(-205);

        //button animation when mouse hovered over it
        exit_button.setOnMouseExited(exit -> {
            exit1.setFitHeight(52);
            exit1.setPreserveRatio(true);
            exit_button.setGraphic(exit1);
        });
        exit_button.setOnMouseEntered(enter2 -> {
            exit1.setFitHeight(60);
            exit1.setPreserveRatio(true);
            exit_button.setGraphic(exit1);
        });

        //closing the window in which you typed your name
        exit_button.setOnMouseClicked(mouseEvent -> {
            Naming.close();
            enter_name.setText("");
        });

        //adding the exit button to the window
        parent1.getChildren().addAll(enter_name, type_your_name, enter, exit_button);
    }

    public void Levels_scene(Stage Game_window)
    {
        StackPane parent2 = new StackPane();
        Scene Level_select = new Scene(parent2);
        Level_select.setCursor(new ImageCursor(new Image("Images/Cursor.png")));
        Game_window.setScene(Level_select);
        ImageView level_select1 = new ImageView(new Image("Images/Level_select.png"));
        parent2.getChildren().add(level_select1);

    }

}
